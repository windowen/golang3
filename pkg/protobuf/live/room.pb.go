// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.5.1
// source: live/room.proto

package live

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 开播请求信息
type RoomStartBroadcastReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`                  // 直播间标题
	Cover         string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover"`                  // 封面图片
	VideoClarity  int32  `protobuf:"varint,3,opt,name=videoClarity,proto3" json:"videoClarity"`   // 视屏清晰度 1- 480p 2-540p 3-720p
	PayRules      int32  `protobuf:"varint,4,opt,name=payRules,proto3" json:"payRules"`           // 付费规则 1- 免费 2-分钟付费 3-场次付费
	TrialDuration int32  `protobuf:"varint,5,opt,name=trialDuration,proto3" json:"trialDuration"` // 试看时长/秒
	UnitPrice     int32  `protobuf:"varint,6,opt,name=unitPrice,proto3" json:"unitPrice"`         // 单价 每分钟单价/每场单价，根据付费规则
	Summary       string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary"`              // 简介
}

func (x *RoomStartBroadcastReq) Reset() {
	*x = RoomStartBroadcastReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomStartBroadcastReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStartBroadcastReq) ProtoMessage() {}

func (x *RoomStartBroadcastReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStartBroadcastReq.ProtoReflect.Descriptor instead.
func (*RoomStartBroadcastReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{0}
}

func (x *RoomStartBroadcastReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RoomStartBroadcastReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RoomStartBroadcastReq) GetVideoClarity() int32 {
	if x != nil {
		return x.VideoClarity
	}
	return 0
}

func (x *RoomStartBroadcastReq) GetPayRules() int32 {
	if x != nil {
		return x.PayRules
	}
	return 0
}

func (x *RoomStartBroadcastReq) GetTrialDuration() int32 {
	if x != nil {
		return x.TrialDuration
	}
	return 0
}

func (x *RoomStartBroadcastReq) GetUnitPrice() int32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *RoomStartBroadcastReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// 添加禁言、踢出、黑名单
type RoomOpCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	RoomId       int32 `protobuf:"varint,2,opt,name=roomId,proto3" json:"roomId"`
	MuteDuration int32 `protobuf:"varint,3,opt,name=muteDuration,proto3" json:"muteDuration"`
}

func (x *RoomOpCreateReq) Reset() {
	*x = RoomOpCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomOpCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomOpCreateReq) ProtoMessage() {}

func (x *RoomOpCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomOpCreateReq.ProtoReflect.Descriptor instead.
func (*RoomOpCreateReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{1}
}

func (x *RoomOpCreateReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoomOpCreateReq) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomOpCreateReq) GetMuteDuration() int32 {
	if x != nil {
		return x.MuteDuration
	}
	return 0
}

// 取消禁言、踢出、黑名单
type RoomOpCancelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *RoomOpCancelReq) Reset() {
	*x = RoomOpCancelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomOpCancelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomOpCancelReq) ProtoMessage() {}

func (x *RoomOpCancelReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomOpCancelReq.ProtoReflect.Descriptor instead.
func (*RoomOpCancelReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{2}
}

func (x *RoomOpCancelReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 禁言、踢出、黑名单列表请求
type RoomOpListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   int32 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId"`
	LastId   int32 `protobuf:"varint,2,opt,name=lastId,proto3" json:"lastId"`
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *RoomOpListReq) Reset() {
	*x = RoomOpListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomOpListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomOpListReq) ProtoMessage() {}

func (x *RoomOpListReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomOpListReq.ProtoReflect.Descriptor instead.
func (*RoomOpListReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{3}
}

func (x *RoomOpListReq) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomOpListReq) GetLastId() int32 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *RoomOpListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RoomOpListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	UserId     int32  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	Nickname   string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	Avatar     string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar"`
	CreateTime string `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime"`
}

func (x *RoomOpListItem) Reset() {
	*x = RoomOpListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomOpListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomOpListItem) ProtoMessage() {}

func (x *RoomOpListItem) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomOpListItem.ProtoReflect.Descriptor instead.
func (*RoomOpListItem) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{4}
}

func (x *RoomOpListItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomOpListItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoomOpListItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RoomOpListItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RoomOpListItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 禁言、踢出、黑名单列表响应
type RoomOpListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RoomOpListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *RoomOpListResp) Reset() {
	*x = RoomOpListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomOpListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomOpListResp) ProtoMessage() {}

func (x *RoomOpListResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomOpListResp.ProtoReflect.Descriptor instead.
func (*RoomOpListResp) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{5}
}

func (x *RoomOpListResp) GetList() []*RoomOpListItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取首页直播间列表
type ListLiveRoomsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category int32 `protobuf:"varint,1,opt,name=category,proto3" json:"category"`
	LastId   int32 `protobuf:"varint,2,opt,name=lastId,proto3" json:"lastId"`
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *ListLiveRoomsReq) Reset() {
	*x = ListLiveRoomsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiveRoomsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiveRoomsReq) ProtoMessage() {}

func (x *ListLiveRoomsReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiveRoomsReq.ProtoReflect.Descriptor instead.
func (*ListLiveRoomsReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{6}
}

func (x *ListLiveRoomsReq) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *ListLiveRoomsReq) GetLastId() int32 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *ListLiveRoomsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListLiveRoomsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                  // 直播间id
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`               // 直播间名称
	Cover       string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover"`             // 直播间封面
	CountryCode string `protobuf:"bytes,4,opt,name=countryCode,proto3" json:"countryCode"` // 国家code
	OnlineNum   int32  `protobuf:"varint,5,opt,name=onlineNum,proto3" json:"onlineNum"`    // 在线人数
	UserId      int32  `protobuf:"varint,6,opt,name=userId,proto3" json:"userId"`          // 主播id
	ChatRoomId  string `protobuf:"bytes,7,opt,name=chatRoomId,proto3" json:"chatRoomId"`   // 聊天室id
	Status      int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status"`          // 房间状态 1-正常  2-禁用 3-删除
}

func (x *ListLiveRoomsItem) Reset() {
	*x = ListLiveRoomsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiveRoomsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiveRoomsItem) ProtoMessage() {}

func (x *ListLiveRoomsItem) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiveRoomsItem.ProtoReflect.Descriptor instead.
func (*ListLiveRoomsItem) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{7}
}

func (x *ListLiveRoomsItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListLiveRoomsItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListLiveRoomsItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ListLiveRoomsItem) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *ListLiveRoomsItem) GetOnlineNum() int32 {
	if x != nil {
		return x.OnlineNum
	}
	return 0
}

func (x *ListLiveRoomsItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListLiveRoomsItem) GetChatRoomId() string {
	if x != nil {
		return x.ChatRoomId
	}
	return ""
}

func (x *ListLiveRoomsItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ListLiveRoomsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListLiveRoomsItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *ListLiveRoomsResp) Reset() {
	*x = ListLiveRoomsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLiveRoomsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLiveRoomsResp) ProtoMessage() {}

func (x *ListLiveRoomsResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLiveRoomsResp.ProtoReflect.Descriptor instead.
func (*ListLiveRoomsResp) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{8}
}

func (x *ListLiveRoomsResp) GetList() []*ListLiveRoomsItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 搜索主播
type SearchAnchorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname"` // 搜索主播昵称
	LastId   int32  `protobuf:"varint,2,opt,name=lastId,proto3" json:"lastId"`
	PageSize int32  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *SearchAnchorReq) Reset() {
	*x = SearchAnchorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAnchorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAnchorReq) ProtoMessage() {}

func (x *SearchAnchorReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAnchorReq.ProtoReflect.Descriptor instead.
func (*SearchAnchorReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{9}
}

func (x *SearchAnchorReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SearchAnchorReq) GetLastId() int32 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *SearchAnchorReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchAnchorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	CountryCode string `protobuf:"bytes,2,opt,name=countryCode,proto3" json:"countryCode"`
	Avatar      string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar"`
	Nickname    string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname"`
	Category    int32  `protobuf:"varint,5,opt,name=category,proto3" json:"category"`      // 类型 1-用户 2-主播 3-机器人
	Status      int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status"`          // 账号状态 1-正常 2-禁用 3-删除
	ChatUUID    string `protobuf:"bytes,7,opt,name=chatUUID,proto3" json:"chatUUID"`       // 聊天室uuid
	LevelId     int32  `protobuf:"varint,8,opt,name=levelId,proto3" json:"levelId"`        // 等级id
	Sign        string `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign"`               // 签名
	Sex         int32  `protobuf:"varint,10,opt,name=sex,proto3" json:"sex"`               // 性别 1-男 2-女
	SetLevelId  int32  `protobuf:"varint,11,opt,name=setLevelId,proto3" json:"setLevelId"` // 后台设置等级
}

func (x *SearchAnchorItem) Reset() {
	*x = SearchAnchorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAnchorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAnchorItem) ProtoMessage() {}

func (x *SearchAnchorItem) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAnchorItem.ProtoReflect.Descriptor instead.
func (*SearchAnchorItem) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{10}
}

func (x *SearchAnchorItem) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchAnchorItem) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *SearchAnchorItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SearchAnchorItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SearchAnchorItem) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *SearchAnchorItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchAnchorItem) GetChatUUID() string {
	if x != nil {
		return x.ChatUUID
	}
	return ""
}

func (x *SearchAnchorItem) GetLevelId() int32 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *SearchAnchorItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *SearchAnchorItem) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SearchAnchorItem) GetSetLevelId() int32 {
	if x != nil {
		return x.SetLevelId
	}
	return 0
}

type SearchAnchorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SearchAnchorItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *SearchAnchorResp) Reset() {
	*x = SearchAnchorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAnchorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAnchorResp) ProtoMessage() {}

func (x *SearchAnchorResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAnchorResp.ProtoReflect.Descriptor instead.
func (*SearchAnchorResp) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{11}
}

func (x *SearchAnchorResp) GetList() []*SearchAnchorItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 直播间详情
type LiveRoomsDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int32 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId"`
	UserId int32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
}

func (x *LiveRoomsDetailsReq) Reset() {
	*x = LiveRoomsDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomsDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomsDetailsReq) ProtoMessage() {}

func (x *LiveRoomsDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomsDetailsReq.ProtoReflect.Descriptor instead.
func (*LiveRoomsDetailsReq) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{12}
}

func (x *LiveRoomsDetailsReq) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *LiveRoomsDetailsReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LiveRoomsDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`                        // 直播间id
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                     // 直播间名称
	Cover         string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover"`                   // 直播间封面
	CountryCode   string `protobuf:"bytes,4,opt,name=countryCode,proto3" json:"countryCode"`       // 国家code
	OnlineNum     int32  `protobuf:"varint,5,opt,name=onlineNum,proto3" json:"onlineNum"`          // 在线人数
	UserId        int32  `protobuf:"varint,6,opt,name=userId,proto3" json:"userId"`                // 主播id
	ChatRoomId    string `protobuf:"bytes,7,opt,name=chatRoomId,proto3" json:"chatRoomId"`         // 聊天室id
	Status        int32  `protobuf:"varint,8,opt,name=status,proto3" json:"status"`                // 房间状态 1-正常  2-禁用 3-删除
	LiveStatus    int32  `protobuf:"varint,9,opt,name=liveStatus,proto3" json:"liveStatus"`        // 直播状态 1-直播 2-下播
	PayRules      int32  `protobuf:"varint,10,opt,name=payRules,proto3" json:"payRules"`           // 付费规则 1- 免费 2-分钟付费 3-场次付费
	TrialDuration int32  `protobuf:"varint,11,opt,name=trialDuration,proto3" json:"trialDuration"` // 试看时长/秒
	UnitPrice     int32  `protobuf:"varint,12,opt,name=unitPrice,proto3" json:"unitPrice"`         // 单价 每分钟单价/每场单价，根据付费规则
}

func (x *LiveRoomsDetailsResp) Reset() {
	*x = LiveRoomsDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveRoomsDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveRoomsDetailsResp) ProtoMessage() {}

func (x *LiveRoomsDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveRoomsDetailsResp.ProtoReflect.Descriptor instead.
func (*LiveRoomsDetailsResp) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{13}
}

func (x *LiveRoomsDetailsResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LiveRoomsDetailsResp) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *LiveRoomsDetailsResp) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *LiveRoomsDetailsResp) GetOnlineNum() int32 {
	if x != nil {
		return x.OnlineNum
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetChatRoomId() string {
	if x != nil {
		return x.ChatRoomId
	}
	return ""
}

func (x *LiveRoomsDetailsResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetLiveStatus() int32 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetPayRules() int32 {
	if x != nil {
		return x.PayRules
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetTrialDuration() int32 {
	if x != nil {
		return x.TrialDuration
	}
	return 0
}

func (x *LiveRoomsDetailsResp) GetUnitPrice() int32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

type CloseBroadcastResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveDuration int32  `protobuf:"varint,1,opt,name=liveDuration,proto3" json:"liveDuration"` // 直播时长
	ViewersNum   int32  `protobuf:"varint,2,opt,name=viewersNum,proto3" json:"viewersNum"`     // 观看人数
	GiftAmount   int32  `protobuf:"varint,3,opt,name=giftAmount,proto3" json:"giftAmount"`     // 收到礼物金额 /钻石
	FollowerNum  int32  `protobuf:"varint,4,opt,name=followerNum,proto3" json:"followerNum"`   // 收到关注数量
	LikeNum      int32  `protobuf:"varint,5,opt,name=likeNum,proto3" json:"likeNum"`           // 收到点赞数量
	RoomId       int32  `protobuf:"varint,6,opt,name=roomId,proto3" json:"roomId"`
	ChatRoomId   string `protobuf:"bytes,7,opt,name=chatRoomId,proto3" json:"chatRoomId"`
}

func (x *CloseBroadcastResp) Reset() {
	*x = CloseBroadcastResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_room_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseBroadcastResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseBroadcastResp) ProtoMessage() {}

func (x *CloseBroadcastResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_room_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseBroadcastResp.ProtoReflect.Descriptor instead.
func (*CloseBroadcastResp) Descriptor() ([]byte, []int) {
	return file_live_room_proto_rawDescGZIP(), []int{14}
}

func (x *CloseBroadcastResp) GetLiveDuration() int32 {
	if x != nil {
		return x.LiveDuration
	}
	return 0
}

func (x *CloseBroadcastResp) GetViewersNum() int32 {
	if x != nil {
		return x.ViewersNum
	}
	return 0
}

func (x *CloseBroadcastResp) GetGiftAmount() int32 {
	if x != nil {
		return x.GiftAmount
	}
	return 0
}

func (x *CloseBroadcastResp) GetFollowerNum() int32 {
	if x != nil {
		return x.FollowerNum
	}
	return 0
}

func (x *CloseBroadcastResp) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *CloseBroadcastResp) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CloseBroadcastResp) GetChatRoomId() string {
	if x != nil {
		return x.ChatRoomId
	}
	return ""
}

var File_live_room_proto protoreflect.FileDescriptor

var file_live_room_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x65, 0x0a, 0x0f,
	0x52, 0x6f, 0x6f, 0x6d, 0x4f, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x4f, 0x70, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x4f, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x4f, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x4f, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x62, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x10,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a,
	0x13, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xe0, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x4e,
	0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x42, 0x1d, 0x5a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x6c, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_live_room_proto_rawDescOnce sync.Once
	file_live_room_proto_rawDescData = file_live_room_proto_rawDesc
)

func file_live_room_proto_rawDescGZIP() []byte {
	file_live_room_proto_rawDescOnce.Do(func() {
		file_live_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_room_proto_rawDescData)
	})
	return file_live_room_proto_rawDescData
}

var file_live_room_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_live_room_proto_goTypes = []any{
	(*RoomStartBroadcastReq)(nil), // 0: proto.RoomStartBroadcastReq
	(*RoomOpCreateReq)(nil),       // 1: proto.RoomOpCreateReq
	(*RoomOpCancelReq)(nil),       // 2: proto.RoomOpCancelReq
	(*RoomOpListReq)(nil),         // 3: proto.RoomOpListReq
	(*RoomOpListItem)(nil),        // 4: proto.RoomOpListItem
	(*RoomOpListResp)(nil),        // 5: proto.RoomOpListResp
	(*ListLiveRoomsReq)(nil),      // 6: proto.ListLiveRoomsReq
	(*ListLiveRoomsItem)(nil),     // 7: proto.ListLiveRoomsItem
	(*ListLiveRoomsResp)(nil),     // 8: proto.ListLiveRoomsResp
	(*SearchAnchorReq)(nil),       // 9: proto.SearchAnchorReq
	(*SearchAnchorItem)(nil),      // 10: proto.SearchAnchorItem
	(*SearchAnchorResp)(nil),      // 11: proto.SearchAnchorResp
	(*LiveRoomsDetailsReq)(nil),   // 12: proto.LiveRoomsDetailsReq
	(*LiveRoomsDetailsResp)(nil),  // 13: proto.LiveRoomsDetailsResp
	(*CloseBroadcastResp)(nil),    // 14: proto.CloseBroadcastResp
}
var file_live_room_proto_depIdxs = []int32{
	4,  // 0: proto.RoomOpListResp.list:type_name -> proto.RoomOpListItem
	7,  // 1: proto.ListLiveRoomsResp.list:type_name -> proto.ListLiveRoomsItem
	10, // 2: proto.SearchAnchorResp.list:type_name -> proto.SearchAnchorItem
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_live_room_proto_init() }
func file_live_room_proto_init() {
	if File_live_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_live_room_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RoomStartBroadcastReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RoomOpCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RoomOpCancelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RoomOpListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RoomOpListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RoomOpListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListLiveRoomsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListLiveRoomsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListLiveRoomsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchAnchorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchAnchorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SearchAnchorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LiveRoomsDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*LiveRoomsDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_room_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CloseBroadcastResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_room_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_live_room_proto_goTypes,
		DependencyIndexes: file_live_room_proto_depIdxs,
		MessageInfos:      file_live_room_proto_msgTypes,
	}.Build()
	File_live_room_proto = out.File
	file_live_room_proto_rawDesc = nil
	file_live_room_proto_goTypes = nil
	file_live_room_proto_depIdxs = nil
}
